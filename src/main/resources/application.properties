# Konfiguracja serwera
server.port=8080
spring.application.name=przychodnia
# Konfiguracja bazy danych H2 (in-memory database for development)
# Użycie H2 pozwala na szybkie uruchomienie bez konieczności instalacji zewnętrznej bazy danych
# Dane będą usuwane po restarcie aplikacji.
spring.h2.console.enabled=true
 #Włącza konsolę H2 (dostępna pod /h2-console)
spring.h2.console.path=/h2-console # Ścieżka do konsoli
spring.datasource.url=jdbc:h2:mem:przychodnia_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE # URL bazy danych in-memory
spring.datasource.driverClassName=org.h2.Driver
#Sterownik JDBC
spring.datasource.username=sa # Nazwa użytkownika
spring.datasource.password= # Hasło (puste)

# Konfiguracja Spring Data JPA i Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect # Dialekt Hibernate dla H2
spring.jpa.hibernate.ddl-auto=update
#DDL (Data Definition Language) - Tworzy/aktualizuje schemat bazy danych na podstawie encji
#Pokazuje zapytania SQL w konsoli
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true #Formatuje zapytania SQL dla lepszej czytelności

# Konfiguracja JWT (JSON Web Token)
# Musi być unikalnym, silnym kluczem tajnym (np. 256-bitowym)
# Możesz wygenerować go np. za pomocą: Base64.getEncoder().encodeToString(Keys.secretKeyFor(SignatureAlgorithm.HS512).getEncoded())
app.jwtSecret=SuperSecretKeyForPrzychodniaAppJWTTokenGenerationAndValidationThatIsAtLeast256BitLong
# Czas ważności tokena w milisekundach (np. 1 godzina = 3600000 ms)
app.jwtExpirationInMs=3600000

# Włączenie debugowania dla Spring Security (opcjonalnie, przydatne do rozwiązywania problemów)
# logging.level.org.springframework.security=DEBUG
